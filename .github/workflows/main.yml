name: API SERVER DEPLOY TO DEVSERVER

on: 
  push:            
    branches: develop
    
jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: repository 내용 가져오기
        uses: actions/checkout@master

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/arm64, linux/arm64/v8'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: solmin2/statistics-api-server:latest

      # ## docker-compose.yml 서버에 이동
      # - name: docker-compose.yml 파일 이동
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.DEV_HOST }}
      #     username: ${{ secrets.DEV_USER }}
      #     key: ${{ secrets.DEV_SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     source: docker-compose-dev.yml
      #     target: "/home/${{ secrets.DEV_USER }}/${{ secrets.DIR }}"

      - name: Docker 이미지 pull 이후 down/up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DIR }}
            touch .env
            sudo echo "${{ secrets.DEV_ENV }}" > .env

            sudo docker run --rm statistics-api-server
            sudo docker pull solmin2/statistics-api-server:latest
            docker run --env-file .env -p 8080:8080 -it statistics-api-server
            
          # sudo docker-compose -f docker-compose-dev.yml up -d
          # sudo docker-compose -f docker-compose-dev.yml down -v
